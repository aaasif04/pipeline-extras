---
- name: Remove the temp directory if it exist in server
  file:
    path: "{{ temp_dir }}"
    state: absent

- name: Create the Temp directory for sds insights
  file:
    path: "{{ temp_dir }}"
    state: directory
    mode: 0755

- name: Get the sds insights snapshot using S3 command
  command: /usr/local/bin/aws s3 cp s3://{{ artifact }}/{{ env }}/{{ product }}/{{ version }}/{{ file_name }} {{ temp_dir }}/{{ file_name }}

- name: Unzip the the Archive file
  unarchive:
    src: "{{ temp_dir }}/{{ file_name }}"
    dest: "{{ temp_dir }}"
    remote_src: yes

- name: Kill the current API process
  shell: "{{ KILL }} {{ PORT }}/tcp"
  ignore_errors: True

- name: Cleanup the deployment path
  file:
    path: "{{ deploy_dir }}"
    state: absent

- name: Create the Deployment Path
  file:
    path: "{{ deploy_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Make sure the log directory exist
  file:
    path: "{{ log_dir}}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy the build
  copy:
    src: "{{ temp_dir }}/sds-insight-apis-1.0-SNAPSHOT/"
    dest: "{{ deploy_dir }}/"
    owner: root
    group: root
    remote_src: yes

- name: Copy the template for exporting environment variables
  template:
    src: "sds-insights-apis.sh.j2"
    dest: /etc/profile.d/sds-insights-apis.sh

- name: Start the script
  shell: "({{ deploy_dir }}bin/sds-insight-apis -Dhttp.port={{ PORT }} -Dplay.http.secret.key={{ api_secret_key }} > {{ log_dir}}insights-log 2>&1 &)"
  async: 10
  poll: 0
  environment:
    INSIGHT_API_PSQL_DB_URL: "jdbc:postgresql://{{ pgsql_host }}:{{ pgsql_port }}/{{ pgsql_db }}"
    INSIGHT_API_PSQL_DB_USER: "{{ pgsql_user }}"
    INSIGHT_API_PSQL_DB_PASSWORD: "{{ pgsql_password }}"
    INSIGHT_API_ALLOWED_HOSTS: "{{ url_domain_name_with_port }}"